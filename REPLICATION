ksb@ksb-H410M-S2-V2:~$ mongosh --port 27017
Current Mongosh Log ID:	680a0244fec8de9bf2d861df
Connecting to:		mongodb://127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.5.0
Using MongoDB:		7.0.19
Using Mongosh:		2.5.0

For mongosh info see: https://www.mongodb.com/docs/mongodb-shell/

------
   The server generated these startup warnings when booting
   2025-04-24T14:48:55.164+05:30: Using the XFS filesystem is strongly recommended with the WiredTiger storage engine. See http://dochub.mongodb.org/core/prodnotes-filesystem
   2025-04-24T14:48:55.566+05:30: Access control is not enabled for the database. Read and write access to data and configuration is unrestricted
   2025-04-24T14:48:55.566+05:30: Soft rlimits for open file descriptors too low
------

test> 

test> rs.initiate({
...   _id: "rs0",
...   members: [
...     { _id: 0, host: "localhost:27017" },
...     { _id: 1, host: "localhost:27018" },
...     { _id: 2, host: "localhost:27019" }
...   ]
... });
... 
{ ok: 1 }
rs0 [direct: other] test> rs.status()
{
  set: 'rs0',
  date: ISODate('2025-04-24T09:21:25.161Z'),
  myState: 1,
  term: Long('1'),
  syncSourceHost: '',
  syncSourceId: -1,
  heartbeatIntervalMillis: Long('2000'),
  majorityVoteCount: 2,
  writeMajorityCount: 2,
  votingMembersCount: 3,
  writableVotingMembersCount: 3,
  optimes: {
    lastCommittedOpTime: { ts: Timestamp({ t: 1745486483, i: 1 }), t: Long('1') },
    lastCommittedWallTime: ISODate('2025-04-24T09:21:23.189Z'),
    readConcernMajorityOpTime: { ts: Timestamp({ t: 1745486483, i: 1 }), t: Long('1') },
    appliedOpTime: { ts: Timestamp({ t: 1745486483, i: 1 }), t: Long('1') },
    durableOpTime: { ts: Timestamp({ t: 1745486483, i: 1 }), t: Long('1') },
    lastAppliedWallTime: ISODate('2025-04-24T09:21:23.189Z'),
    lastDurableWallTime: ISODate('2025-04-24T09:21:23.189Z')
  },
  lastStableRecoveryTimestamp: Timestamp({ t: 1745486432, i: 1 }),
  electionCandidateMetrics: {
    lastElectionReason: 'electionTimeout',
    lastElectionDate: ISODate('2025-04-24T09:20:43.147Z'),
    electionTerm: Long('1'),
    lastCommittedOpTimeAtElection: { ts: Timestamp({ t: 1745486432, i: 1 }), t: Long('-1') },
    lastSeenOpTimeAtElection: { ts: Timestamp({ t: 1745486432, i: 1 }), t: Long('-1') },
    numVotesNeeded: 2,
    priorityAtElection: 1,
    electionTimeoutMillis: Long('10000'),
    numCatchUpOps: Long('0'),
    newTermStartDate: ISODate('2025-04-24T09:20:43.176Z'),
    wMajorityWriteAvailabilityDate: ISODate('2025-04-24T09:20:43.693Z')
  },
  members: [
    {
      _id: 0,
      name: 'localhost:27017',
      health: 1,
      state: 1,
      stateStr: 'PRIMARY',
      uptime: 150,
      optime: { ts: Timestamp({ t: 1745486483, i: 1 }), t: Long('1') },
      optimeDate: ISODate('2025-04-24T09:21:23.000Z'),
      lastAppliedWallTime: ISODate('2025-04-24T09:21:23.189Z'),
      lastDurableWallTime: ISODate('2025-04-24T09:21:23.189Z'),
      syncSourceHost: '',
      syncSourceId: -1,
      infoMessage: 'Could not find member to sync from',
      electionTime: Timestamp({ t: 1745486443, i: 1 }),
      electionDate: ISODate('2025-04-24T09:20:43.000Z'),
      configVersion: 1,
      configTerm: 1,
      self: true,
      lastHeartbeatMessage: ''
    },
    {
      _id: 1,
      name: 'localhost:27018',
      health: 1,
      state: 2,
      stateStr: 'SECONDARY',
      uptime: 52,
      optime: { ts: Timestamp({ t: 1745486473, i: 1 }), t: Long('1') },
      optimeDurable: { ts: Timestamp({ t: 1745486473, i: 1 }), t: Long('1') },
      optimeDate: ISODate('2025-04-24T09:21:13.000Z'),
      optimeDurableDate: ISODate('2025-04-24T09:21:13.000Z'),
      lastAppliedWallTime: ISODate('2025-04-24T09:21:23.189Z'),
      lastDurableWallTime: ISODate('2025-04-24T09:21:23.189Z'),
      lastHeartbeat: ISODate('2025-04-24T09:21:23.179Z'),
      lastHeartbeatRecv: ISODate('2025-04-24T09:21:24.184Z'),
      pingMs: Long('0'),
      lastHeartbeatMessage: '',
      syncSourceHost: 'localhost:27017',
      syncSourceId: 0,
      infoMessage: '',
      configVersion: 1,
      configTerm: 1
    },
    {
      _id: 2,
      name: 'localhost:27019',
      health: 1,
      state: 2,
      stateStr: 'SECONDARY',
      uptime: 52,
      optime: { ts: Timestamp({ t: 1745486473, i: 1 }), t: Long('1') },
      optimeDurable: { ts: Timestamp({ t: 1745486473, i: 1 }), t: Long('1') },
      optimeDate: ISODate('2025-04-24T09:21:13.000Z'),
      optimeDurableDate: ISODate('2025-04-24T09:21:13.000Z'),
      lastAppliedWallTime: ISODate('2025-04-24T09:21:23.189Z'),
      lastDurableWallTime: ISODate('2025-04-24T09:21:23.189Z'),
      lastHeartbeat: ISODate('2025-04-24T09:21:23.180Z'),
      lastHeartbeatRecv: ISODate('2025-04-24T09:21:24.184Z'),
      pingMs: Long('0'),
      lastHeartbeatMessage: '',
      syncSourceHost: 'localhost:27017',
      syncSourceId: 0,
      infoMessage: '',
      configVersion: 1,
      configTerm: 1
    }
  ],
  ok: 1,
  '$clusterTime': {
    clusterTime: Timestamp({ t: 1745486483, i: 1 }),
    signature: {
      hash: Binary.createFromBase64('AAAAAAAAAAAAAAAAAAAAAAAAAAA=', 0),
      keyId: Long('0')
    }
  },
  operationTime: Timestamp({ t: 1745486483, i: 1 })
}
rs0 [direct: primary] test> mongosh --port 27017
... 
Uncaught:
SyntaxError: Missing semicolon. (1:10)

> 1 | mongosh --port 27017
    |           ^
  2 |
  3 |

rs0 [direct: primary] test> use testDB
... 
... db.customers.insertOne({
...   name: "Anjana",
...   city: "ekm",
...   age: 30
... })
... 
switched to db testDB
rs0 [direct: primary] testDB> use testDB
... 
... db.customers.insertOne({
...   name: "Anjana",
...   city: "ekm",
...   age: 30
... })
... })
rs0 [direct: primary] testDB> db.customers.insertOne({
...   name: "Anjana",
...   city: "ekm",
...   age: 30
... })
{
  acknowledged: true,
  insertedId: ObjectId('680a035afec8de9bf2d861e0')
}
rs0 [direct: primary] testDB> db.customers.find().pretty()
[
  {
    _id: ObjectId('680a035afec8de9bf2d861e0'),
    name: 'Anjana',
    city: 'ekm',
    age: 30
  }
]
rs0 [direct: primary] testDB> 

//VERIFIED
